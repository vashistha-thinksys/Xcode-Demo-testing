lane :create_app do
    # Create a new app on App Store Connect if it doesn't exist
    produce(
      app_identifier: ENV['APP_IDENTIFIER'], # The bundle identifier for your app
      app_name: ENV['APP_NAME'], # The name of your app
      username: ENV['APPLE_ID'], # Your Apple ID email
      skip_itc: false, # Create the app in both the App Store Connect and the Developer Portal
      language: "english",
      sku: "example001"
    )
  
    # Set up App Store Connect API key for authentication
    app_store_connect_api_key(
      key_id: ENV['APP_STORE_CONNECT_API_KEY_ID'],
      issuer_id: ENV['APP_STORE_CONNECT_ISSUER_ID'],
      key_filepath: ENV['APP_STORE_KEY_FILEPATH'],
      duration: 1200,
      in_house: false
    )
    
    ENV["FASTLANE_SKIP_GITHUB_ISSUES"] = "true"
    # Set up Match for code signing and provisioning profiles
    # Initialize Match for both init and development
    match(
      type: "appstore", # Run for development
      git_url: ENV['MATCH_GIT_URL'], # Repository for Match to store certificates
      storage_mode: "git", # Specify storage mode to avoid prompt
      readonly: false # Allow match to write to the repository
    )

    match(
      type: "init", # Initialize match
      git_url: ENV['MATCH_GIT_URL'], # Repository for Match to store certificates
      storage_mode: "git", # Specify storage mode to avoid prompt
      readonly: false # Allow match to write to the repository
    )

  
    # 4. Build the app using Gym
    gym(
      scheme: ENV['APP_SCHEME'],               # Your app's scheme, passed dynamically
      export_method: "app-store",              # Use 'ad-hoc' for adhoc distribution
      output_name: ENV['OUTPUT_NAME'],         # The output .ipa file name
      clean: true                              # Optional: Clean the build before compiling
    )
  
    # 5. Upload the build to TestFlight using Pilot
    pilot(
      ipa: ENV['OUTPUT_NAME'],                 # The path to the generated .ipa file
      skip_waiting_for_build_processing: true  # Skip waiting for build processing
    )
  end
  